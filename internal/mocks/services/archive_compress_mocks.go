// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controllers/archive_compress/archive_compress_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/iliyasali2107/archiver/internal/dto"
)

// MockArchiveCompressSvc is a mock of ArchiveCompressSvc interface.
type MockArchiveCompressSvc struct {
	ctrl     *gomock.Controller
	recorder *MockArchiveCompressSvcMockRecorder
}

// MockArchiveCompressSvcMockRecorder is the mock recorder for MockArchiveCompressSvc.
type MockArchiveCompressSvcMockRecorder struct {
	mock *MockArchiveCompressSvc
}

// NewMockArchiveCompressSvc creates a new mock instance.
func NewMockArchiveCompressSvc(ctrl *gomock.Controller) *MockArchiveCompressSvc {
	mock := &MockArchiveCompressSvc{ctrl: ctrl}
	mock.recorder = &MockArchiveCompressSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArchiveCompressSvc) EXPECT() *MockArchiveCompressSvcMockRecorder {
	return m.recorder
}

// Clear mocks base method.
func (m *MockArchiveCompressSvc) Clear(filename string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clear", filename)
	ret0, _ := ret[0].(error)
	return ret0
}

// Clear indicates an expected call of Clear.
func (mr *MockArchiveCompressSvcMockRecorder) Clear(filename interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockArchiveCompressSvc)(nil).Clear), filename)
}

// Compress mocks base method.
func (m *MockArchiveCompressSvc) Compress(arg0 dto.ArchiveCompressRequest) (dto.ArchiveCompressResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Compress", arg0)
	ret0, _ := ret[0].(dto.ArchiveCompressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Compress indicates an expected call of Compress.
func (mr *MockArchiveCompressSvcMockRecorder) Compress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Compress", reflect.TypeOf((*MockArchiveCompressSvc)(nil).Compress), arg0)
}
